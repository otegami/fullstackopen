{"version":3,"sources":["services/person.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","updateObject","put","delete","Filter","value","onChange","PersonForm","nameValue","numberValue","onNameChange","onNumberChange","onClick","type","Person","person","handleClick","name","number","Persons","persons","map","Notification","message","console","log","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearchName","setMessage","useEffect","personService","personToShow","filter","includes","event","target","preventDefault","find","undefined","newPersonObject","length","concat","catch","setTimeout","window","confirm","updatePersonObject","retrunedPerson","error","personId","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0767465d.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, updateObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, updateObject)\n  return request.then(response => response.data)\n}\n\nconst destroy = id => axios.delete(`${baseUrl}/${id}`)\n\nexport default { getAll, create, update, destroy }\n","import React from 'react'\n\nconst Filter = ({value, onChange}) => <div>filter shown with: <input value={value} onChange={onChange}/></div>\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ nameValue, numberValue, onNameChange, onNumberChange, onClick }) => {\n  return (\n    <form>\n      <div>\n        name: <input value={nameValue} onChange={onNameChange}/>\n      </div>\n      <div>\n        number: <input value={numberValue} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={onClick}>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react';\n\nconst Person = ({person, handleClick}) => {\n  return (\n    <li>\n      {person.name}: {person.number}\n      <button value={person.id} onClick={handleClick}>delete</button>\n    </li>\n  )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, handleClick}) => <ul>{persons.map(person => <Person key={person.id} person={person} handleClick={handleClick} />)}</ul>\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  if(message !== null) {\n    console.log(message)\n    return (\n      <div className=\"success\">\n        { message }\n      </div>\n    )\n  }\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ searchName, setSearchName] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(response => setPersons(response))\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n\n    if (person === undefined) {\n      const newPersonObject = {\n        id: persons.length + 1,\n        name: newName,\n        number: newNumber\n      }\n      personService.create(newPersonObject)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added ${response.name}`)\n        })\n        .catch()\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n    } else {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatePersonObject = { ...person, number: newNumber }\n        personService.update(person.id, updatePersonObject)\n          .then(retrunedPerson => {\n            setPersons(persons.map(person => person.name === newName ? retrunedPerson : person))\n            setMessage(`Changed ${retrunedPerson.name}'s number!`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n          })\n          .catch(error => {\n            setMessage(`Information of ${updatePersonObject.name} has already been removed from server`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n          })\n      }\n    }\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchNameChange = (event) => {\n    setSearchName(event.target.value)\n  }\n  const handleDeletePersonClick = (event) => {\n    event.preventDefault()\n    const personId = Number(event.target.value)\n    const person = persons.find(person => person.id === personId)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.destroy(personId)\n      setPersons(persons.filter(person => person.id !== personId))\n    }\n  }\n  const personToShow = !searchName ? persons : persons.filter(person => person.name.includes(searchName))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={message} />\n        <Filter value={searchName} onChange={handleSearchNameChange} />\n      <h2>Add a new</h2>\n        <PersonForm\n          nameValue={newName}\n          numberValue={newNumber}\n          onNameChange={handleNameChange}\n          onNumberChange={handleNumberChange}\n          onClick={addPerson}\n        />\n      <h2>Numbers</h2>\n        <Persons persons={personToShow} handleClick={handleDeletePersonClick} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}